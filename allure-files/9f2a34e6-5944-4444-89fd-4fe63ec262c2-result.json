{"name": "test_get_boards", "status": "broken", "statusDetails": {"message": "requests.exceptions.HTTPError: 404 Client Error: Not Found for url: https://api.trello.com/1/organizations/6791fcefd762058f5b480058?key=2b754d81683a294766e6c752246cf680&token=ATTA364916e089dbf35c7e30cb320b6deaf3b554bedfdac8def9620ec7d41eed5b50969511C6&boards=open&board_fields=all&fields=boards", "trace": "def test_get_boards():\n        api = BoardApi(url,api_key, token)\n>       board_list = api.get_all_boards_by_org_id(\"6791fcefd762058f5b480058\")\n\ntest\\api_board_test.py:9: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi\\BoardsApi.py:21: in get_all_boards_by_org_id\n    response.raise_for_status()  # Вызывает ошибку, если запрос не успешен\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [404]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 404 Client Error: Not Found for url: https://api.trello.com/1/organizations/6791fcefd762058f5b480058?key=2b754d81683a294766e6c752246cf680&token=ATTA364916e089dbf35c7e30cb320b6deaf3b554bedfdac8def9620ec7d41eed5b50969511C6&boards=open&board_fields=all&fields=boards\n\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\requests\\models.py:1024: HTTPError"}, "start": 1737628526251, "stop": 1737628526729, "uuid": "5b5d935e-fc52-4ee1-8332-60b252533e54", "historyId": "6b6d87fcb857c8545a4e5c7b9b22bbed", "testCaseId": "6b6d87fcb857c8545a4e5c7b9b22bbed", "fullName": "test.api_board_test#test_get_boards", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "api_board_test"}, {"name": "host", "value": "TEG"}, {"name": "thread", "value": "14140-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.api_board_test"}]}